import{i,o as s,G as u,j as _,k as h,M as m,l as d,m as g,e as x,P as e,O as c,A as y,r as f,p as S}from"./index-BGeJOtze.js";class l extends i{constructor(){super(Object.assign(s(l.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new u({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,_(this._constantSource,this._sum)}static getDefaults(){return Object.assign(i.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class n extends h{constructor(){super(Object.assign(s(n.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=s(n.getDefaults(),arguments,["min","max"]);this._mult=this.input=new m({context:this.context,value:t.max-t.min}),this._add=this.output=new l({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(h.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class p extends h{constructor(){super(Object.assign(s(p.getDefaults(),arguments))),this.name="Zero",this._gain=new u({context:this.context}),this.output=this._gain,this.input=void 0,d(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),g(this.context.getConstant(0),this._gain),this}}class r extends x{constructor(){super(s(r.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=e.prototype._fromType,this._toType=e.prototype._toType,this._is=e.prototype._is,this._clampValue=e.prototype._clampValue;const t=s(r.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new c(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new u({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new i({context:this.context,units:"audioRange",value:0}),this._zeros=new p({context:this.context}),this._a2g=new y({context:this.context}),this._scaler=this.output=new n({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),f(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(c.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const a=this.min,o=this.max;this._units=t,this.min=a,this.max=o}get state(){return this._oscillator.state}connect(t,a,o){return(t instanceof e||t instanceof i)&&(this.convert=t.convert,this.units=t.units),S(this,t,a,o),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}export{r as L};
