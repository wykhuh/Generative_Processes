import{k as c,W as r,e as s,o as i,G as e,i as p,r as a,l as h}from"./index-BGeJOtze.js";class u extends c{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new r({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class n extends s{constructor(){super(Object.assign(i(n.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new u({context:this.context}),this.a=new e({context:this.context,gain:0}),this.b=new e({context:this.context,gain:0}),this.output=new e({context:this.context}),this._internalChannels=[this.a,this.b];const t=i(n.getDefaults(),arguments,["fade"]);this.fade=new p({context:this.context,units:"normalRange",value:t.fade}),a(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",h(this._split,this.a.gain,0),h(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(s.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class f extends s{constructor(t){super(t),this.name="Effect",this._dryWet=new n({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new e({context:this.context}),this.effectReturn=new e({context:this.context}),this.input=new e({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],a(this,"wet")}static getDefaults(){return Object.assign(s.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}export{f as E};
